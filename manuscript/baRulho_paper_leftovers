
#######################################

The baRulho package builds on functions and data formats from the warbleR (Araya-Salas & Smith-Vidaurre 2017) and seewave packages (Sueur et al. 2008). Within baRulho, test signals for playback experiments can be synthesized with traits that vary in time, frequency, and amplitude. After projecting and re-recording signals in the field, recordings can be organized in baRulho by time syncing the master or original recording file with re-recorded signals. This package includes commonly reported degradation measures, such as signal-to-noise ratio, blur ratio, cross-correlation, and excess attenuation, in addition to measures that are more tailored specifically to study systems or questions, such as tail-to-signal ratio and spectrogram distortion (Table 1). 

2.1 Synthesize test signals
  
The function synth_sounds allows users to generate test sounds to be used in transmission experiments. With newly generated data using this function, we show how baRulho offers a workflow with functions to prepare the data set for analysis as well as to calculate and visualize measures that quantify degradation of acoustic signals in the time and frequency domain. 

Important features: need this?
All sound files must have the same sampling rate
All playback experiment recordings must be registered with the same recording volume 
Functions apply a bandpass filter based on the supplied frequency range of test signals 
Amplitude is homogeneous across test sounds from playback experiments 
Works with wav, mp3, wac, and flac

2.2 Time sync re-recorded sounds

After conducting playback experiments (i.e., broadcasting and re-recording playback songs and calls), recordings can be imported into baRulho and each distance aligned with the master sound file with the function search_templates(). This function runs a cross-correlation on one or more markers across the re-recorded files.

2.3 Quantify Degradation
The package calculates five widely used degradation measures:

2.3.1 Blur ratio
Blur ratio quantifies the degradation of sound as a function of the change in signal power in the time domain (Dabelsteen et al. 1993) and is measured as the mismatch between amplitude envelopes (expressed as probability density functions) of the reference signal and the re-recorded signal. By converting envelopes to probability mass functions, the effect of power attenuation is removed, focusing the analysis on the modification of the envelope shape. Low values indicate low or little degradation of signals. The function blur_ratio() measures the blur ratio of signals in which a reference playback has been re-recorded at different distances. If envelopes have different lengths the function will use envelope cross-correlation to find the best match between envelopes. The function compares each signal type to the corresponding reference signal within the supplied frequency range of the reference signal. Signals are compared to their counterpart recorded at the shortest distance from the source within the supplied frequency range of the reference signal. The ‘signal.type’ column must be used to tell the function to only compare signals belonging to the same category (e.g., song-types). Blur ratio can be calculated as follows:
  
The output data frame is similar to input data, except that it includes two new columns (‘reference’ and ‘blur.ratio’) with the reference signal and blur ratio values. The package also includes an analogous function.
 
2.3.2 Excess Attenuation

2.3.3 Envelope correlation 
Amplitude envelope correlation measures the similarity of two signals in the time domain. The envelope_correlation() function computes the envelope correlation coefficients between reference playback and re-recorded signals. Values close to 1 indicate very similar amplitude envelopes and suggest little degradation has occurred. If envelopes have different lengths, that is, when signals have different durations, cross-correlation is applied and the maximum correlation coefficient is returned. The output from the envelope correlation adds two new columns (‘reference’ and ‘envelope.correlation’) to an extended selection table, which include the reference signal ID and the amplitude envelope correlation coefficients. This function does not provide a graphical output. However, the graphs generated by blur_ratio() can be used to inspect the envelope shapes and the alignment of signals.
 
 2.3.4 Signal-to-noise and Tail-to-signal ratio
Signal-to-noise ratio (SNR) quantifies signal amplitude level in relation to ambient noise and is a metric of overall signal attenuation or amplitude loss. Tail-to-signal (TSR) is the ratio of power at the tail-end of the signal in relation to the signal or call. TSR provides an estimate of reverberation, which occurs when signals scatter and reach the receiver by multiple sound paths (Richards and Wiley 1980). SNR is implemented in the function signal_to_noise_ratio(), which requires a measurement of ambient noise just before each signal (noise.ref = "adjacent") or one or more ambient noise measurements per recording (noise.ref = "custom"). When ambient noise margins overlap with another acoustic signal nearby, SNR will be inaccurate, so margin length should be carefully considered. Any SNR less than or equal to one suggests background noise is equal to or overpowering the acoustic signal. TSR is implemented in the function tail_to_signal_ratio(), and can be calculated in two ways. First (type 1), follows Dabelsteen et al. 1993 (add in what it measures here). Alternatively, “Type 2” compares the amplitude of the tails to ambient noise. For TSR, higher values suggest more reverberations.
 
2.3.5 Spectrogram distortion
Finally, the function spcc() measures spectrogram cross-correlation, which measures similarity between signals in the frequency domain, as a metric of signal distortion. Values close to 1 means very similar spectrograms (i.e. little signal distortion). The function is a wrapper on warbleR’s xcorr().



 As a result, we found less consistent results in Sigpro compared to baRulho, simply due to user errors, particularly at greater distances when signals were more degraded and more difficult to visualize on the spectrogram. Review of 27 published articles that used Sigpro and cite Dabelsteen et al. 1993; Pedersen, 1998) included a maximum transmission re-recording distance of 76.60 ± 94.24 meters S.D, projected at an amplitude of 83.22 ± 7.52 dB S.D. 
  

Additional functionality. 

parallel computing
using custom ambient sound annotations
measuring detection distance
2 methods all vs 1 m and all vs previous dist

Thus, transmission studies are essential because they allow for quantification of sound degradation patterns, which can be linked to species ecology. Consequently, transmission studies should seek to place their hypotheses in ecologically relevant contexts. For example, testing signal transmission patterns for sex-specific songs and calls (Barker et al. 2009; Graham et al. 2017; Benedict et al. 2021; Wheeldon et al. 2022), within territories between rivals (Vargas-Castro et al. 2017) or mates (Lampe et al. 2007; Grabarczyk & Gill 2019), body size (Baotic et al. 2018), or at distances that replicate territory size (Naguib et al. 2008).

